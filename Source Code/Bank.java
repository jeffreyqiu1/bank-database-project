
import java.util.*;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import static java.lang.String.valueOf;
import java.time.LocalDate;
import static java.time.LocalDate.parse;
import java.time.Period;
import javax.swing.table.*;

public class Bank extends javax.swing.JFrame {

    /**
     * Creates new form Bank
     */
    public Bank() {
        initComponents();
        getNumOfFiles();
        setCustomerList();
    }

    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProgramPanel = new javax.swing.JPanel();
        MenuPanel = new javax.swing.JPanel();
        addCustJFrame = new javax.swing.JButton();
        RemoveCustBtn = new javax.swing.JButton();
        ViewCustBtn = new javax.swing.JButton();
        SortByPINBtn = new javax.swing.JButton();
        SortByNameBtn = new javax.swing.JButton();
        SearchByNameField = new javax.swing.JTextField();
        SearchByPINField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        MenuTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AddCustPanel = new javax.swing.JPanel();
        AddCustBtn = new javax.swing.JButton();
        CancelAddCustBtn = new javax.swing.JButton();
        CustInfoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        AddNameField = new javax.swing.JTextField();
        AddPINField = new javax.swing.JTextField();
        birthDateField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        AddAccPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        AddCheqField = new javax.swing.JTextField();
        AddSaveField = new javax.swing.JTextField();
        AddCredField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        CreditLimitField = new javax.swing.JTextField();
        ViewCustPanel = new javax.swing.JPanel();
        BackBtn1 = new javax.swing.JButton();
        NextCustBtn = new javax.swing.JButton();
        PrevCustBtn = new javax.swing.JButton();
        CustInfoPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        EditCustNameField = new javax.swing.JTextField();
        EditCustPINField = new javax.swing.JTextField();
        EditCustBirthDateField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ViewAccBalTable = new javax.swing.JTable();
        EditCreditLimitField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TransactionTable = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        ConfirmTransactionBtn = new javax.swing.JButton();
        TransactionField = new javax.swing.JTextField();
        TransactionComboBox = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        ProgramPanel.setLayout(new java.awt.CardLayout());

        addCustJFrame.setBackground(new java.awt.Color(204, 255, 204));
        addCustJFrame.setText("Create new customer");
        addCustJFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustJFrameActionPerformed(evt);
            }
        });

        RemoveCustBtn.setBackground(new java.awt.Color(255, 153, 153));
        RemoveCustBtn.setText("Remove selected customer");
        RemoveCustBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveCustBtnActionPerformed(evt);
            }
        });

        ViewCustBtn.setText("View selected customer");
        ViewCustBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewCustBtnActionPerformed(evt);
            }
        });

        SortByPINBtn.setText("Sort by PIN");
        SortByPINBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByPINBtnActionPerformed(evt);
            }
        });

        SortByNameBtn.setText("Sort by name");
        SortByNameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByNameBtnActionPerformed(evt);
            }
        });

        SearchByNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByNameFieldActionPerformed(evt);
            }
        });

        SearchByPINField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByPINFieldActionPerformed(evt);
            }
        });

        MenuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "PIN", "Chequing Account", "Savings Account", "Credit Card"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(MenuTable);

        jLabel3.setText("Search by name: ");

        jLabel4.setText("Search by PIN: ");

        javax.swing.GroupLayout MenuPanelLayout = new javax.swing.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addGroup(MenuPanelLayout.createSequentialGroup()
                        .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SearchByPINField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SearchByNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(MenuPanelLayout.createSequentialGroup()
                                .addComponent(SortByNameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SortByPINBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(99, 99, 99)
                        .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ViewCustBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(RemoveCustBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addCustJFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1))
                .addContainerGap(228, Short.MAX_VALUE))
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(SearchByNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCustJFrame))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MenuPanelLayout.createSequentialGroup()
                        .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(SearchByPINField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SortByNameBtn)
                            .addComponent(SortByPINBtn)
                            .addComponent(ViewCustBtn)))
                    .addComponent(RemoveCustBtn))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(678, Short.MAX_VALUE))
        );

        ProgramPanel.add(MenuPanel, "MenuPanel");

        AddCustBtn.setBackground(new java.awt.Color(204, 255, 204));
        AddCustBtn.setText("Confirm");
        AddCustBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCustBtnActionPerformed(evt);
            }
        });

        CancelAddCustBtn.setBackground(new java.awt.Color(255, 153, 153));
        CancelAddCustBtn.setText("Cancel");
        CancelAddCustBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelAddCustBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Customer Name:");

        jLabel2.setText("Customer PIN: ");

        jLabel5.setText("Date of Birth: ");

        jLabel6.setText("(YYYY-MM-DD)");

        AddNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNameFieldActionPerformed(evt);
            }
        });

        AddPINField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPINFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Enter Customer Information");

        javax.swing.GroupLayout CustInfoPanelLayout = new javax.swing.GroupLayout(CustInfoPanel);
        CustInfoPanel.setLayout(CustInfoPanelLayout);
        CustInfoPanelLayout.setHorizontalGroup(
            CustInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CustInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CustInfoPanelLayout.createSequentialGroup()
                        .addGroup(CustInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CustInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CustInfoPanelLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(birthDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CustInfoPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(CustInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddPINField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        CustInfoPanelLayout.setVerticalGroup(
            CustInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustInfoPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CustInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(AddNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CustInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(AddPINField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CustInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(birthDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jLabel8.setText("Chequing Account:");

        jLabel9.setText("Savings Account:");

        jLabel10.setText("Credit Card:");

        AddCheqField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCheqFieldActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Enter Account Balance");

        jLabel23.setText("Credit Limit:");

        javax.swing.GroupLayout AddAccPanelLayout = new javax.swing.GroupLayout(AddAccPanel);
        AddAccPanel.setLayout(AddAccPanelLayout);
        AddAccPanelLayout.setHorizontalGroup(
            AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAccPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddAccPanelLayout.createSequentialGroup()
                        .addGroup(AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddAccPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddSaveField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddCheqField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(AddAccPanelLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(AddCredField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(CreditLimitField))))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        AddAccPanelLayout.setVerticalGroup(
            AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAccPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(AddCheqField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(AddSaveField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddCredField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(AddAccPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(CreditLimitField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddCustPanelLayout = new javax.swing.GroupLayout(AddCustPanel);
        AddCustPanel.setLayout(AddCustPanelLayout);
        AddCustPanelLayout.setHorizontalGroup(
            AddCustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCustPanelLayout.createSequentialGroup()
                .addGroup(AddCustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(AddAccPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CustInfoPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(70, 70, 70)
                .addGroup(AddCustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CancelAddCustBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddCustBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(214, Short.MAX_VALUE))
        );
        AddCustPanelLayout.setVerticalGroup(
            AddCustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCustPanelLayout.createSequentialGroup()
                .addGroup(AddCustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddCustPanelLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(CancelAddCustBtn)
                        .addGap(18, 18, 18)
                        .addComponent(AddCustBtn))
                    .addComponent(CustInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddAccPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 646, Short.MAX_VALUE))
        );

        ProgramPanel.add(AddCustPanel, "AddCustPanel");

        BackBtn1.setText("Back to main menu");
        BackBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn1ActionPerformed(evt);
            }
        });

        NextCustBtn.setText("Next customer");
        NextCustBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextCustBtnActionPerformed(evt);
            }
        });

        PrevCustBtn.setText("Previous customer");
        PrevCustBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrevCustBtnActionPerformed(evt);
            }
        });

        jLabel15.setText("Customer Name:");

        jLabel46.setText("Customer PIN: ");

        jLabel48.setText("Date of Birth: ");

        jLabel18.setText("(YYYY-MM-DD)");

        EditCustNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCustNameFieldActionPerformed(evt);
            }
        });

        EditCustPINField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCustPINFieldActionPerformed(evt);
            }
        });

        EditCustBirthDateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCustBirthDateFieldActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Edit Customer Information");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("View Account Balances");

        ViewAccBalTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ViewAccBalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Account", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ViewAccBalTable.setRowHeight(32);
        jScrollPane2.setViewportView(ViewAccBalTable);

        EditCreditLimitField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCreditLimitFieldActionPerformed(evt);
            }
        });

        jLabel17.setText("Credit Limit:");

        jCheckBox1.setText("Freeze");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Freeze");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Freeze");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBox3)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CustInfoPanel1Layout = new javax.swing.GroupLayout(CustInfoPanel1);
        CustInfoPanel1.setLayout(CustInfoPanel1Layout);
        CustInfoPanel1Layout.setHorizontalGroup(
            CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustInfoPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CustInfoPanel1Layout.createSequentialGroup()
                        .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CustInfoPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EditCustPINField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EditCustNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(CustInfoPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EditCustBirthDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EditCreditLimitField, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CustInfoPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CustInfoPanel1Layout.setVerticalGroup(
            CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustInfoPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CustInfoPanel1Layout.createSequentialGroup()
                        .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(EditCustNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel46)
                            .addComponent(EditCustPINField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EditCustBirthDateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel48))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CustInfoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(EditCreditLimitField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CustInfoPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TransactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account", "Amount Deposited", "Final Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(TransactionTable);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Transaction History");

        ConfirmTransactionBtn.setText("Confirm");
        ConfirmTransactionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmTransactionBtnActionPerformed(evt);
            }
        });

        TransactionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransactionFieldActionPerformed(evt);
            }
        });

        TransactionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        TransactionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransactionComboBoxActionPerformed(evt);
            }
        });

        jLabel14.setText("Account");

        jLabel16.setText("Amount Deposited/Withdrawn");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Process Transaction");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ConfirmTransactionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TransactionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(TransactionField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TransactionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TransactionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(ConfirmTransactionBtn))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ViewCustPanelLayout = new javax.swing.GroupLayout(ViewCustPanel);
        ViewCustPanel.setLayout(ViewCustPanelLayout);
        ViewCustPanelLayout.setHorizontalGroup(
            ViewCustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewCustPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ViewCustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ViewCustPanelLayout.createSequentialGroup()
                        .addComponent(BackBtn1)
                        .addGap(18, 18, 18)
                        .addComponent(PrevCustBtn)
                        .addGap(18, 18, 18)
                        .addComponent(NextCustBtn))
                    .addComponent(CustInfoPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ViewCustPanelLayout.setVerticalGroup(
            ViewCustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewCustPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ViewCustPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NextCustBtn)
                    .addComponent(PrevCustBtn)
                    .addComponent(BackBtn1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CustInfoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(569, Short.MAX_VALUE))
        );

        ProgramPanel.add(ViewCustPanel, "ViewCustPanel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProgramPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProgramPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int numOfFiles;
    public int currentCustomer = 0;
    LinkedList customerList = new LinkedList();

    public void getNumOfFiles() {
        try {
            String filename = "numOfFiles.txt";
            File file = new File(filename);
            Scanner myReader = new Scanner(file);
            numOfFiles = Integer.parseInt(myReader.nextLine());
            myReader.close();
        } catch (FileNotFoundException e) {
            numOfFiles = 50; //value just in case
        }
    }

    public void setNumOfFiles() { //called before closing to save the num of files
        try {
            FileWriter myWriter = new FileWriter("numOfFiles.txt");
            myWriter.write(Integer.toString(numOfFiles));
            myWriter.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(ProgramPanel, "An error occured while saving to database. Apologies");
        }
    }

    public void setCustomerList() {
        //read all files in folder
        for (int i = 0; i < numOfFiles; i++) {
            try {
                String filename = i + ".txt";
                File file = new File(filename);
                Scanner myReader = new Scanner(file);
                String name = myReader.nextLine();
                int PIN = Integer.parseInt(myReader.nextLine());
                LocalDate d = parse(myReader.nextLine());
                double ca = Double.parseDouble(myReader.nextLine());
                Boolean caf = Boolean.parseBoolean(myReader.nextLine());
                double sa = Double.parseDouble(myReader.nextLine());
                Boolean saf = Boolean.parseBoolean(myReader.nextLine());
                double cc = Double.parseDouble(myReader.nextLine());
                Boolean ccf = Boolean.parseBoolean(myReader.nextLine());
                double cclimit = Double.parseDouble(myReader.nextLine());

                Customer c = new Customer(name, PIN, filename, d, ca, caf, sa, saf, cc, ccf, cclimit);
                customerList.add(c);

                //transaction history
                while (myReader.hasNextLine()) {
                    String[] parts = myReader.nextLine().split(" ");
                    String accountName = parts[0];
                    double amount = Double.parseDouble(parts[1]);
                    double remainder = Double.parseDouble(parts[2]);
                    Transaction t = new Transaction(accountName, amount, remainder);
                    c.transactionList.add(t);
                }

                //add customer data to table
                ((DefaultTableModel) MenuTable.getModel()).addRow(new Object[]{name, PIN, ca, sa, cc});
                myReader.close();

            } catch (FileNotFoundException e) {
                //file not found, index likely deleted
            } catch (Exception e) {
                //error taking in data
            }
        }
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setNumOfFiles();
        for (int i = 0; i < customerList.size(); i++) {
            customerList.get(i).updateFile(customerList.get(i));
        }
    }//GEN-LAST:event_formWindowClosing

    private void RemoveCustBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveCustBtnActionPerformed
        try {
            int row = MenuTable.getSelectedRow();
            //remove from customerlist
            File file = new File(customerList.get(row).getFilename());
            file.delete();
            customerList.remove(row);
            //numOfFiles--; bc files may not be in continuous order
            //remove from table
            ((DefaultTableModel) MenuTable.getModel()).removeRow(row);
        } catch (Exception e) {
            //clicked on an empty row, do nothing
        }
    }//GEN-LAST:event_RemoveCustBtnActionPerformed

    private void SortByNameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByNameBtnActionPerformed
        //sort customerlist
        for (int j = 0; j < customerList.size(); j++) {
            for (int i = 0; i < customerList.size() - 1; i++) {
                if (customerList.get(i).getName().compareTo(customerList.get(i + 1).getName()) > 0) {
                    //temps are used to transfer data, the pointers i and i+1 don't swap
                    Customer temp = new Customer(customerList.get(i));
                    Customer temp2 = new Customer(customerList.get(i + 1));
                    customerList.set(i, temp2);
                    customerList.set(i + 1, temp);
                }
            }
        }
        updateTable();
    }//GEN-LAST:event_SortByNameBtnActionPerformed

    private void SortByPINBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByPINBtnActionPerformed
        //sort customerlist
        for (int j = 0; j < customerList.size(); j++) {
            for (int i = 0; i < customerList.size() - 1; i++) {
                if (customerList.get(i).getPIN() > (customerList.get(i + 1).getPIN())) {
                    Customer temp = new Customer(customerList.get(i));
                    customerList.set(i, customerList.get(i + 1));
                    customerList.set(i + 1, temp);
                }
            }
        }
        updateTable();
    }//GEN-LAST:event_SortByPINBtnActionPerformed

    private void SearchByNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByNameFieldActionPerformed
        String name = SearchByNameField.getText();
        if (name.isEmpty()) {
            //nothing in textfield, just display regular table
            updateTable();
        } else {
            ((DefaultTableModel) MenuTable.getModel()).setRowCount(0);
            for (int i = 0; i < customerList.size(); i++) {
                String custName = customerList.get(i).getName();
                if (custName.contains(name)) {
                    ((DefaultTableModel) MenuTable.getModel()).addRow(new Object[]{custName, customerList.get(i).getPIN(), customerList.get(i).getCheqAcc().getBalance(), customerList.get(i).getSaveAcc().getBalance(), customerList.get(i).getCreditCard().getBalance()});
                }
            }
        }
    }//GEN-LAST:event_SearchByNameFieldActionPerformed

    private void SearchByPINFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByPINFieldActionPerformed
        String name = SearchByPINField.getText();
        if (name.isEmpty()) {
            //nothing in textfield, just display regular table
            updateTable();
        } else {
            ((DefaultTableModel) MenuTable.getModel()).setRowCount(0);
            for (int i = 0; i < customerList.size(); i++) {
                String custPIN = Integer.toString(customerList.get(i).getPIN());
                if (custPIN.contains(name)) {
                    ((DefaultTableModel) MenuTable.getModel()).addRow(new Object[]{customerList.get(i).getName(), custPIN, customerList.get(i).getCheqAcc().getBalance(), customerList.get(i).getSaveAcc().getBalance(), customerList.get(i).getCreditCard().getBalance()});
                }
            }
        }
    }//GEN-LAST:event_SearchByPINFieldActionPerformed

    private void addCustJFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustJFrameActionPerformed
        CardLayout card = (CardLayout) ProgramPanel.getLayout();
        card.show(ProgramPanel, "AddCustPanel");
        birthDateField.setText("YYYY-MM-DD");
    }//GEN-LAST:event_addCustJFrameActionPerformed

    private void ViewCustBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewCustBtnActionPerformed
        int row = MenuTable.getSelectedRow();
        if (row != -1) {
            CardLayout card = (CardLayout) ProgramPanel.getLayout();
            card.show(ProgramPanel, "ViewCustPanel");
            viewUserInfo(customerList.get(row));

            //currentCustomer stores the index of the currently displayed customer 
            //I use this because the currently displayed customer info stays in row
            //and the jPanel needs to know which customer to use when next/previous is called
            currentCustomer = row;
        } else {
            //clicked on empty row, do nothing
        }
    }//GEN-LAST:event_ViewCustBtnActionPerformed

    public void viewUserInfo(Customer c) {
        //user info related gui
        ViewAccBalTable.getModel().setValueAt("Chequing", 0, 0);
        ViewAccBalTable.getModel().setValueAt(c.getCheqAcc().getBalance(), 0, 1);
        ViewAccBalTable.getModel().setValueAt("Savings", 1, 0);
        ViewAccBalTable.getModel().setValueAt(c.getSaveAcc().getBalance(), 1, 1);
        ViewAccBalTable.getModel().setValueAt("Credit Card", 2, 0);
        ViewAccBalTable.getModel().setValueAt(c.getCreditCard().getBalance(), 2, 1);
        EditCustNameField.setText(c.getName());
        EditCustPINField.setText(valueOf(c.getPIN()));
        EditCustBirthDateField.setText(valueOf(c.getBirthDate()));
        EditCreditLimitField.setText(valueOf(c.getCreditLimit()));

        //transaction related gui
        //reset what's in jComboBox
        TransactionComboBox.removeAllItems();
        if (c.tooYoung()) {
            //make Chequing and Credit accounts unfreezeable
            c.getCheqAcc().setIsFrozen(true);
            c.getCreditCard().setIsFrozen(true);
            jCheckBox1.setEnabled(false);
            jCheckBox3.setEnabled(false);
        } else {
            jCheckBox1.setEnabled(true);
            jCheckBox3.setEnabled(true);
        }
        //check boxes if frozen
        boolean p = c.getCheqAcc().isFrozen();
        jCheckBox1.setSelected(p);
        boolean q = c.getSaveAcc().isFrozen();
        jCheckBox2.setSelected(q);
        boolean r = c.getCreditCard().isFrozen();
        jCheckBox3.setSelected(r);

        //if not frozen, allow account to be transacted
        if (!p) {
            TransactionComboBox.addItem("Chequing");
        }
        if (!q) {
            TransactionComboBox.addItem("Savings");
        }
        if (!r) {
            TransactionComboBox.addItem("Credit");
        }
        for (int x = TransactionTable.getModel().getRowCount() - 1; x >= 0; x--) {
            ((DefaultTableModel) TransactionTable.getModel()).removeRow(x);
        }
        //transaction table
        for (int i = 0; i < c.transactionList.size(); i++) {
            if (i == 5) {
                break;
            }
            String s = c.transactionList.get(i).getAccountName();
            double a = c.transactionList.get(i).getAmount();
            double b = c.transactionList.get(i).getRemainder();
            ((DefaultTableModel) TransactionTable.getModel()).addRow(new Object[]{s, a, b});
        }
    }

    private void CancelAddCustBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelAddCustBtnActionPerformed
        CardLayout card = (CardLayout) ProgramPanel.getLayout();
        card.show(ProgramPanel, "MenuPanel");
    }//GEN-LAST:event_CancelAddCustBtnActionPerformed

    private void AddCustBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCustBtnActionPerformed
        try {
            //get info from text fields
            String name = AddNameField.getText();
            int PIN = Integer.parseInt(AddPINField.getText());
            String birthDateString = birthDateField.getText();
            double ca = Double.parseDouble(AddCheqField.getText());
            double sa = Double.parseDouble(AddSaveField.getText());
            double cc = Double.parseDouble(AddCredField.getText());
            double cclimit = Double.parseDouble(CreditLimitField.getText());
            //turn the date input into an actual date
            String[] parts = birthDateString.split("-");
            int year = Integer.parseInt(parts[0]);
            int month = Integer.parseInt(parts[1]);
            int day = Integer.parseInt(parts[2]);
            LocalDate birthDate = LocalDate.of(year, month, day);
            LocalDate today = LocalDate.now();
            Period age = Period.between(birthDate, today);

            Boolean tooYoung = false;
            if (age.getYears() < 18) {
                tooYoung = true;
            }

            //check if PIN already in use
            boolean pinUsed = false;
            for (int i = 0; i < customerList.size(); i++) {
                if (PIN == customerList.get(i).getPIN()) {
                    pinUsed = true;
                }
            }

            if (pinUsed) {
                JOptionPane.showMessageDialog(ProgramPanel, "PIN already in use. Select a different PIN");
            } else if (ca < 0 || sa < 0) {
                JOptionPane.showMessageDialog(ProgramPanel, "Error: Can't have debt on a debit account");
            } else if (cc < cclimit) {
                JOptionPane.showMessageDialog(ProgramPanel, "Error: Credit debt exceeds credit limit");
            } else {
                String filename = numOfFiles + ".txt";
                if (!tooYoung) {
                    Customer c = new Customer(name, PIN, filename, birthDate, ca, false, sa, false, cc, false, cclimit);
                    customerList.add(c);
                    numOfFiles++;
                } else {
                    //children cannot use their chequing account or credit card until they turn 18
                    Customer c = new Customer(name, PIN, filename, birthDate, ca, true, sa, false, cc, true, cclimit);
                    customerList.add(c);
                    numOfFiles++;
                }
                //add customer to table
                ((DefaultTableModel) MenuTable.getModel()).addRow(new Object[]{name, PIN, ca, sa, cc});

                //go back to main menu
                CardLayout card = (CardLayout) ProgramPanel.getLayout();
                card.show(ProgramPanel, "MenuPanel");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(ProgramPanel, "Error: Enter a number. Remove any symbols like '$'");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ProgramPanel, "Error: Wrong date format. The date should be YYYY-MM-DD");
        }
    }//GEN-LAST:event_AddCustBtnActionPerformed

    private void AddCheqFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCheqFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddCheqFieldActionPerformed

    private void AddPINFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPINFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddPINFieldActionPerformed

    private void EditCustBirthDateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCustBirthDateFieldActionPerformed
        try {
            String birthDateString = EditCustBirthDateField.getText();

            String[] parts = birthDateString.split("-");
            int year = Integer.parseInt(parts[0]);
            int month = Integer.parseInt(parts[1]);
            int day = Integer.parseInt(parts[2]);

            LocalDate birthDate = LocalDate.of(year, month, day);
            LocalDate today = LocalDate.now();
            Period age = Period.between(birthDate, today);
            customerList.get(currentCustomer).setBirthDate(birthDate);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ProgramPanel, "Incorrect birth date format");
        }
        //call viewUserInfo again because birth date may have changed
        //which makes customer old enough for chequing and credit
        viewUserInfo(customerList.get(currentCustomer));
    }//GEN-LAST:event_EditCustBirthDateFieldActionPerformed

    private void EditCustPINFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCustPINFieldActionPerformed
        try {
            int pin = Integer.parseInt(EditCustPINField.getText());
            boolean pinUsed = false;
            for (int i = 0; i < customerList.size(); i++) {
                if (i == currentCustomer) {
                    //no change made
                } else if (pin == customerList.get(i).getPIN()) {
                    pinUsed = true;
                }
            }
            if (!pinUsed) {
                customerList.get(currentCustomer).setPIN(pin);
            } else {
                JOptionPane.showMessageDialog(ProgramPanel, "PIN already in use, select a different PIN");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ProgramPanel, "Error: Enter a number");
        }
    }//GEN-LAST:event_EditCustPINFieldActionPerformed

    private void EditCustNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCustNameFieldActionPerformed
        customerList.get(currentCustomer).setName(EditCustNameField.getText());
    }//GEN-LAST:event_EditCustNameFieldActionPerformed

    private void ConfirmTransactionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmTransactionBtnActionPerformed
        try {
            boolean isCredit = false;
            Account currentAccount = customerList.get(currentCustomer).getCheqAcc();
            //note: it's set to CheqAcc for simplicity but if all accounts are frozen, getSelectedItem = null and the try catch fails
            if (TransactionComboBox.getSelectedItem().equals("Chequing")) {
                currentAccount = customerList.get(currentCustomer).getCheqAcc();
            } else if (TransactionComboBox.getSelectedItem().equals("Savings")) {
                currentAccount = customerList.get(currentCustomer).getSaveAcc();
            } else if (TransactionComboBox.getSelectedItem().equals("Credit")) {
                isCredit = true;
                currentAccount = customerList.get(currentCustomer).getCreditCard();
            }
            Double d = Double.parseDouble(TransactionField.getText());
            if (isCredit && (currentAccount.getBalance() + d) < customerList.get(currentCustomer).getCreditLimit()) {
                JOptionPane.showMessageDialog(ProgramPanel, "Error: Credit debt exceeds credit limit");
            } else if (!isCredit && (currentAccount.getBalance() + d) < 0.0) {
                //remember to add !isCredit because credit can go below 0
                JOptionPane.showMessageDialog(ProgramPanel, "Error: Debit accounts cannot have debt");
            } else {
                currentAccount.setBalance(currentAccount.getBalance() + d);
                ((DefaultTableModel) TransactionTable.getModel()).addRow(new Object[]{TransactionComboBox.getSelectedItem(), d, currentAccount.getBalance()});
                Transaction t = new Transaction(currentAccount.getAccountName(), d, currentAccount.getBalance());
                customerList.get(currentCustomer).transactionList.add(0, t);
                viewUserInfo(customerList.get(currentCustomer));
            }
        } catch (NullPointerException e) {
            //all accounts frozen, do no transactions
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ProgramPanel, "Error: Enter a number");
        }
    }//GEN-LAST:event_ConfirmTransactionBtnActionPerformed

    private void PrevCustBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrevCustBtnActionPerformed
        viewUserInfo(customerList.get(currentCustomer).getPrevious());
        currentCustomer--;
        if (currentCustomer < 0) {
            currentCustomer = customerList.size();
            //makes currentCustomer loop like a clock
        }
    }//GEN-LAST:event_PrevCustBtnActionPerformed

    private void NextCustBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextCustBtnActionPerformed
        viewUserInfo(customerList.get(currentCustomer).getNext());
        currentCustomer++;
    }//GEN-LAST:event_NextCustBtnActionPerformed

    private void BackBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn1ActionPerformed
        CardLayout card = (CardLayout) ProgramPanel.getLayout();
        card.show(ProgramPanel, "MenuPanel");
        updateTable();//update any customer info changes
    }//GEN-LAST:event_BackBtn1ActionPerformed

    private void TransactionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransactionComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TransactionComboBoxActionPerformed

    private void TransactionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransactionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TransactionFieldActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        customerList.get(currentCustomer).getCheqAcc().switchFrozen();
        viewUserInfo(customerList.get(currentCustomer));

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        customerList.get(currentCustomer).getSaveAcc().switchFrozen();
        viewUserInfo(customerList.get(currentCustomer));
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        customerList.get(currentCustomer).getCreditCard().switchFrozen();
        viewUserInfo(customerList.get(currentCustomer));
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void EditCreditLimitFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCreditLimitFieldActionPerformed
        try {
            Double d = Double.parseDouble(EditCreditLimitField.getText());
            if (d <= customerList.get(currentCustomer).getCreditLimit()) {
                customerList.get(currentCustomer).setCreditLimit(d);
            } else {
                JOptionPane.showMessageDialog(ProgramPanel, "Error: Credit balance is below credit limit");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ProgramPanel, "Error: Enter a number");
        }
    }//GEN-LAST:event_EditCreditLimitFieldActionPerformed

    private void AddNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddNameFieldActionPerformed

    public void updateTable() {
        ((DefaultTableModel) MenuTable.getModel()).setRowCount(customerList.size());
        for (int i = 0; i < customerList.size(); i++) {
            MenuTable.setValueAt(customerList.get(i).getName(), i, 0);
            MenuTable.setValueAt(customerList.get(i).getPIN(), i, 1);
            MenuTable.setValueAt(customerList.get(i).getCheqAcc().getBalance(), i, 2);
            MenuTable.setValueAt(customerList.get(i).getSaveAcc().getBalance(), i, 3);
            MenuTable.setValueAt(customerList.get(i).getCreditCard().getBalance(), i, 4);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bank().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddAccPanel;
    private javax.swing.JTextField AddCheqField;
    private javax.swing.JTextField AddCredField;
    private javax.swing.JButton AddCustBtn;
    private javax.swing.JPanel AddCustPanel;
    private javax.swing.JTextField AddNameField;
    private javax.swing.JTextField AddPINField;
    private javax.swing.JTextField AddSaveField;
    private javax.swing.JButton BackBtn1;
    private javax.swing.JButton CancelAddCustBtn;
    private javax.swing.JButton ConfirmTransactionBtn;
    private javax.swing.JTextField CreditLimitField;
    private javax.swing.JPanel CustInfoPanel;
    private javax.swing.JPanel CustInfoPanel1;
    private javax.swing.JTextField EditCreditLimitField;
    private javax.swing.JTextField EditCustBirthDateField;
    private javax.swing.JTextField EditCustNameField;
    private javax.swing.JTextField EditCustPINField;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JTable MenuTable;
    private javax.swing.JButton NextCustBtn;
    private javax.swing.JButton PrevCustBtn;
    private javax.swing.JPanel ProgramPanel;
    private javax.swing.JButton RemoveCustBtn;
    private javax.swing.JTextField SearchByNameField;
    private javax.swing.JTextField SearchByPINField;
    private javax.swing.JButton SortByNameBtn;
    private javax.swing.JButton SortByPINBtn;
    private javax.swing.JComboBox<String> TransactionComboBox;
    private javax.swing.JTextField TransactionField;
    private javax.swing.JTable TransactionTable;
    private javax.swing.JTable ViewAccBalTable;
    private javax.swing.JButton ViewCustBtn;
    private javax.swing.JPanel ViewCustPanel;
    private javax.swing.JButton addCustJFrame;
    private javax.swing.JTextField birthDateField;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
